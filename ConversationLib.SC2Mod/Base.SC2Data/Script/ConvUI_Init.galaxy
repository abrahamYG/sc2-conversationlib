include "Script/ConvUI_UI";
include "Script/ConvUI_CConversation";
include "Script/ConvUI_CCharacter";

void ConvUI_CreateDialogIntLineCallback(SConversationLineRef Line, CCharacterRef Character, int index){
	int dlg;
	string template;
	playergroup pg = PlayerGroupActive();
	int player = PlayerGroupPlayer(pg,1);

	if(index%2 != 0){
		template = CONVUI_LINEDLG_TEMPLATELEFT;
	}
	else{
		template = CONVUI_LINEDLG_TEMPLATERIGHT;
	}
	dlg = ConvUI_LineDialogCreate(Line,Character,template);
	DialogControlSetPositionRelative(dlg,pg,c_anchorTop,ConvUI_DialogMainHookupGet(),c_anchorTop,0,(250*index));
	TriggerDebugOutput(1,IntToText(index)+Line.Text,true);
}

bool DummyTrigger(bool a, bool b){
	CConversationRef Conversation = ConvUI_CConversations[0];
	string convId = "TestConversation";
	arrayref<CCharacterArray> Characters = ConvUI_CCharacters;
	
	ConvUI_CCharacterCreateFromCatalog(Characters);
	ConvUI_CConversationCreateFromData(Conversation,convId);
	ConvUI_ConversationRun(Conversation,Characters,ConvUI_CreateDialogIntLineCallback);



	return true;
}

void ConvUI_Init(){
	trigger t = TriggerCreate("DummyTrigger");
	TriggerExecute(t,false,false);
}
