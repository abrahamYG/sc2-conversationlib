include "Script/ConvUI/Conversations/main";
include "Script/ConvUI/Characters/main";
include "Script/ConvUI/Callbacks/main";

include "Script/ConvUI/CConversationGetById";
include "Script/ConvUI/Modules/init";
include "Script/ConvUI_Debug";

ConversationCallback ConvUI_ManagedCallbacks;
int ConvUI_ManagedConversationCount = 0;
bool ConvUI_ManagedCharactersInitialized = false;




string ConvUI_GetManagedConversationKey(string convid){
	string key = "ConvUI_ManagedConversation[{id}]";
	return StringReplaceWord(key,"{id}",convid,1,true);
}


int ConvUI_GetManagedConversationIndex(string convid){
	string key = ConvUI_GetManagedConversationKey(convid);
	int index = -1;
	if(DataTableValueExists(true,key)){
		index = DataTableGetInt(true,key);
	}
	return index;
}





void ConvUI_SetManagedCallbackModuleWrapper(string convid, string module){
	int index = ConvUI_GetManagedConversationIndex(convid);
	string key = ConvUI_GetManagedConversationKey(convid);
	DataTableSetString(true,key+".Module",module);
	ConvUI_SetManagedCallbackModule(ConvUI_CConversations[index],ConvUI_ManagedCallbacks,module);
}

void ConvUI_RunManagedConversation(string convid, int player){
	int index = ConvUI_GetManagedConversationIndex(convid);
	string key = ConvUI_GetManagedConversationKey(convid);
	string module = DataTableGetString(true,key+".Module");
	playergroup pg = PlayerGroupSingle(player);
	if(index>-1){
		
		ConvUI_ConversationRun(ConvUI_CConversations[index],ConvUI_CCharacters,ConvUI_ManagedCallbacks, player);
		CinematicMode(pg,false,0.0);
	}
}


text ConvUI_GetManagedConversationLineText(string convid, string lineid){
	string key = ConvUI_GetManagedConversationKey(convid);
	int index = ConvUI_GetManagedConversationIndex(convid);
	int lineIndex = -1;
	text t;
	SConversationLineRef Line;
	if(index>-1){
		lineIndex = ConvUI_CConversationLineGetById(ConvUI_CConversations[index],lineid);
		if(lineIndex>-1){
			Line = ConvUI_CConversations[index].Lines[lineIndex];
			t = Line.Text;
		}
	}
	return t;
}

void ConvUI_InitManagedCharacters(){
	if(ConvUI_ManagedCharactersInitialized){return;}
    ConvUI_CCharacterCreateFromCatalog(ConvUI_CCharacters);
    ConvUI_ManagedCharactersInitialized = true;
}


int ConvUI_NewManagedConversation(string convid){
	string key = ConvUI_GetManagedConversationKey(convid);
	int index = ConvUI_ManagedConversationCount;
	ConvUI_InitManagedCharacters();
	if(DataTableValueExists(true,key)){
		index = DataTableGetInt(true,key);
	}
	else{
		if(index<CConversationArraySize){
			DataTableSetInt(true,key,index);
			ConvUI_CConversationCreateFromData(ConvUI_CConversations[index],convid);
			ConvUI_ManagedConversationCount = index+1;
		}
		else{
			index = -1;
		}
	}
	return index;
}


void ConvUI_Init(){
	ConvUI_BriefingUIInit();
	ConvUI_DebugInit();
}
