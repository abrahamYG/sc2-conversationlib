include "Script/ConvUI/Headers/ConvUI_UI_h";


int ConvUI_DialogMainHookup = -1;

int ConvUI_DialogMainHookupGet(){
    if(ConvUI_DialogMainHookup<0){
        ConvUI_DialogMainHookup = DialogControlHookupStandard(c_triggerControlTypePanel,"UIContainer/FullscreenUpperContainer");
    }
    return ConvUI_DialogMainHookup;
}

int ConvUI_LineDialogCreate(SConversationLineRef Line, CCharacterRef Character,string template){
    string PortraitImage = Character.Image;
    text Speaker = Character.Name;
    text Text = Line.Text;
    string PortraitModel = Character.Variations[0].Model;
    string PortraitActor = Character.Variations[0].Actor;
    string finalTemplate = template;
    playergroup pg = PlayerGroupActive();
    int parent = ConvUI_DialogMainHookupGet();
    int dlg;
    int dlgPortraitImage;
    int dlgPortraitModel;
    int dlgSPeaker;
    int dlgText;
    int portrait;
    if(finalTemplate == ""){
        finalTemplate = CONVUI_LINEDLG_TEMPLATELEFT;
    }
    dlg = DialogControlCreateInPanelFromTemplate(parent,c_triggerControlTypePanel,finalTemplate);
    dlgPortraitImage = DialogControlHookup(dlg,c_triggerControlTypeImage,"PortraitImage");
    dlgPortraitModel = DialogControlHookup(dlg,c_triggerControlTypePortrait,"PortraitModel");
    dlgSPeaker = DialogControlHookup(dlg,c_triggerControlTypeLabel,"BodyFrame/SpeakerLabel");
    dlgText = DialogControlHookup(dlg,c_triggerControlTypeLabel,"BodyFrame/TextLabel");
    DialogControlSetPropertyAsString(dlgPortraitImage,c_triggerControlPropertyImage,pg,PortraitImage);
    DialogControlSetPropertyAsText(dlgSPeaker,c_triggerControlPropertyText,pg,Speaker);
    DialogControlSetPropertyAsText(dlgText,c_triggerControlPropertyText,pg,Text);
    portrait = PortraitGetTriggerControl(dlgPortraitModel);
    PortraitSetBorderVisible(portrait,false);
    PortraitSetActor(portrait,PortraitActor);
    PortraitSetModel(portrait,PortraitModel,false);
    DialogControlSetVisible(dlgPortraitImage,pg,false);
    return dlg;
}
